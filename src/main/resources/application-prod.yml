## application-prod.yml

server:
  port: ${SERVER_PORT:8080}

spring:
  config:
    activate:
      on-profile: prod
  
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://mysql:3306/terning_farewell_prod
    username: terning_user
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: false
        default_batch_fetch_size: 100
    open-in-view: false

  data:
    redis:
      host: redis
      port: 6379
  
  kafka:
    bootstrap-servers: kafka:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: farewell-group-prod
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${GMAIL_USERNAME}
    password: ${GMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

redisson:
  file: classpath:redisson-config-prod.yml

event:
  gift-stock-key: "event:gift:stock:prod"
  kafka-topic: "event-application-prod"

jwt:
  secret:
    key: ${JWT_SECRET_KEY}
  expiration:
    ms: 600000

logging:
  level:
    org.hibernate.SQL: info
