# src/main/resources/application-dev.yml

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
    open-in-view: false
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: farewell-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

redisson:
  file: classpath:redisson-config.yml

event:
  gift-stock-key: "event:gift:stock"
  kafka-topic: "event-application"

admin:
  secret-key: ${ADMIN_SECRET_KEY}
  header-name: "X-ADMIN-KEY"

jwt:
  secret:
    key: ${JWT_SECRET_KEY}
  expiration:
    ms: 600000

logging:
  level:
    org.hibernate.SQL: debug
    com.terning.farewell_server: debug

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS}
