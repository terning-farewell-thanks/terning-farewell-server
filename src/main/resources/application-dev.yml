# src/main/resources/application-dev.yml

server:
  port: ${SERVER_PORT:8080}
  tomcat:
    threads:
      max: 1600
      min-spare: 50
    accept-count: 200

spring:
  config:
    activate:
      on-profile: prod
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: false
        default_batch_fetch_size: 100
    open-in-view: false
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: farewell-group-prod
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  mail:
    host: email-smtp.ap-northeast-2.amazonaws.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    from: noreply@terning-farewell.p-e.kr
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

redisson:
  file: classpath:redisson-config-prod.yml

event:
  gift-stock-key: "event:gift:stock:prod"
  kafka-topic: "event-application-prod"

admin:
  secret-key: ${ADMIN_SECRET_KEY}
  header-name: "X-ADMIN-KEY"

jwt:
  secret:
    key: ${JWT_SECRET_KEY}
  expiration:
    ms: 600000

logging:
  level:
    org.hibernate.SQL: info

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS}


